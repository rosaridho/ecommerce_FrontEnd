{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nvar initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  pembeli_avatar: \"\",\n  is_login: false,\n  listTransaksi: [],\n  listProdukPenjual: [],\n  listCart: [],\n  cartTotalQty: \"\",\n  cartTotalByr: \"\",\n  jumlah: \"\",\n  pembayaran: \"\",\n  pembeli_id: \"\",\n  penjual_username: \"\",\n  penjual_password: \"\",\n  is_loginPenjual: false,\n  api_keyPenjual: \"\",\n  penjual_id: \"\",\n  penjual_avatar: \"\"\n};\nvar myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nvar myDataUrl = \"http://127.0.0.1:5000/pembeli/\";\nvar myTransUrl = \"http://127.0.0.1:5000/pembeli/transaksi/\";\nvar myCartUrl = \"http://127.0.0.1:5000/pembeli/cart/\";\nvar myReqUrlPenjual = \"http://127.0.0.1:5000/penjual/login\";\nvar myDataUrlPenjual = \"http://127.0.0.1:5000/penjual/\";\nvar myCrudPenjual = \"http://127.0.0.1:5000/penjual/produk/\";\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, e) {\n      return _defineProperty({}, e.target.name, e.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogoutPenjual: function postLogoutPenjual(state) {\n      return {\n        is_loginPenjual: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  pembeli_username: state.pembeli_username,\n                  pembeli_password: state.pembeli_password\n                };\n                _context.next = 3;\n                return axios.post(myReqUrl, data).then(function (response) {\n                  console.log(\"postLogin response\", response.data);\n                  store.setState({\n                    is_login: true,\n                    pembeli_username: state.pembeli_username,\n                    pembeli_password: state.pembeli_password,\n                    api_key: response.data.Token\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    postLoginPenjual: function () {\n      var _postLoginPenjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  penjual_username: state.penjual_username,\n                  penjual_password: state.penjual_password\n                };\n                _context2.next = 3;\n                return axios.post(myReqUrlPenjual, data).then(function (response) {\n                  console.log(\"postLogin response\", response.data);\n                  store.setState({\n                    is_loginPenjual: true,\n                    penjual_username: state.penjual_username,\n                    penjual_password: state.penjual_password,\n                    api_keyPenjual: response.data.Token\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postLoginPenjual(_x2) {\n        return _postLoginPenjual.apply(this, arguments);\n      }\n\n      return postLoginPenjual;\n    }(),\n    postLogin2: function () {\n      var _postLogin2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context3.next = 3;\n                return axios.get(myDataUrl + state.pembeli_username, config).then(function (response) {\n                  console.log(response);\n                  store.setState({\n                    pembeli_email: response.data.Data_Pembeli.pembeli_email,\n                    pembeli_username: response.data.Data_Pembeli.pembeli_username,\n                    pembeli_namaLengkap: response.data.Data_Pembeli.pembeli_namaLengkap,\n                    pembeli_gender: response.data.Data_Pembeli.pembeli_gender,\n                    pembeli_lokasiKota: response.data.Data_Pembeli.pembeli_lokasiKota,\n                    pembeli_pekerjaan: response.data.Data_Pembeli.pembeli_pekerjaan,\n                    pembeli_avatar: response.data.Data_Pembeli.pembeli_avatar,\n                    pembeli_id: response.data.Data_Pembeli.pembeli_id\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function postLogin2(_x3) {\n        return _postLogin2.apply(this, arguments);\n      }\n\n      return postLogin2;\n    }(),\n    postLogin2Penjual: function () {\n      var _postLogin2Penjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_keyPenjual\n                  }\n                };\n                _context4.next = 3;\n                return axios.get(myDataUrlPenjual + state.penjual_username, config).then(function (response) {\n                  console.log(response);\n                  store.setState({\n                    penjual_email: response.data.Data_Penjual.penjual_email,\n                    penjual_username: response.data.Data_Penjual.penjual_username,\n                    penjual_namaLengkap: response.data.Data_Penjual.penjual_namaLengkap,\n                    penjual_gender: response.data.Data_Penjual.penjual_gender,\n                    penjual_lokasiKota: response.data.Data_Penjual.penjual_lokasiKota,\n                    penjual_id: response.data.Data_Penjual.penjual_id,\n                    penjual_avatar: response.data.Data_Penjual.penjual_avatar\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function postLogin2Penjual(_x4) {\n        return _postLogin2Penjual.apply(this, arguments);\n      }\n\n      return postLogin2Penjual;\n    }(),\n    postLogin3: function () {\n      var _postLogin3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context5.next = 3;\n                return axios.get(myTransUrl + state.pembeli_username + \"?rp=40\", config).then(function (response) {\n                  console.log(response);\n                  var allTransaction = response.data.Transaksi;\n                  store.setState({\n                    listTransaksi: allTransaction\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function postLogin3(_x5) {\n        return _postLogin3.apply(this, arguments);\n      }\n\n      return postLogin3;\n    }(),\n    postLogin3Penjual: function () {\n      var _postLogin3Penjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_keyPenjual\n                  }\n                };\n                _context6.next = 3;\n                return axios.get(myDataUrlPenjual + state.penjual_id + \"?rp=40\", config).then(function (response) {\n                  console.log(response);\n                  var allTransaction = response.data.Transaksi;\n                  store.setState({\n                    listProdukPenjual: allTransaction\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function postLogin3Penjual(_x6) {\n        return _postLogin3Penjual.apply(this, arguments);\n      }\n\n      return postLogin3Penjual;\n    }(),\n    postLogin4: function () {\n      var _postLogin4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context7.next = 3;\n                return axios.get(myCartUrl + state.pembeli_username, config).then(function (response) {\n                  console.log(response);\n                  var allCart = response.data;\n                  store.setState({\n                    listCart: allCart.Cart,\n                    cartTotalByr: allCart.totalBayar,\n                    cartTotalQty: allCart.totalProduk\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function postLogin4(_x7) {\n        return _postLogin4.apply(this, arguments);\n      }\n\n      return postLogin4;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/src/store.js"],"names":["createStore","axios","initialState","api_key","pembeli_email","pembeli_password","pembeli_username","pembeli_namaLengkap","pembeli_gender","pembeli_lokasiKota","pembeli_pekerjaan","pembeli_avatar","is_login","listTransaksi","listProdukPenjual","listCart","cartTotalQty","cartTotalByr","jumlah","pembayaran","pembeli_id","penjual_username","penjual_password","is_loginPenjual","api_keyPenjual","penjual_id","penjual_avatar","myReqUrl","myDataUrl","myTransUrl","myCartUrl","myReqUrlPenjual","myDataUrlPenjual","myCrudPenjual","store","actions","setField","state","e","target","name","value","postLogout","postLogoutPenjual","postLogin","data","post","then","response","console","log","setState","Token","catch","error","postLoginPenjual","postLogin2","config","headers","Authorization","get","Data_Pembeli","postLogin2Penjual","penjual_email","Data_Penjual","penjual_namaLengkap","penjual_gender","penjual_lokasiKota","postLogin3","allTransaction","Transaksi","postLogin3Penjual","postLogin4","allCart","Cart","totalBayar","totalProduk"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,gBAAgB,EAAE,EAJC;AAKnBC,EAAAA,mBAAmB,EAAE,EALF;AAMnBC,EAAAA,cAAc,EAAE,EANG;AAOnBC,EAAAA,kBAAkB,EAAE,EAPD;AAQnBC,EAAAA,iBAAiB,EAAE,EARA;AASnBC,EAAAA,cAAc,EAAE,EATG;AAUnBC,EAAAA,QAAQ,EAAE,KAVS;AAWnBC,EAAAA,aAAa,EAAE,EAXI;AAYnBC,EAAAA,iBAAiB,EAAE,EAZA;AAanBC,EAAAA,QAAQ,EAAC,EAbU;AAcnBC,EAAAA,YAAY,EAAC,EAdM;AAenBC,EAAAA,YAAY,EAAC,EAfM;AAgBnBC,EAAAA,MAAM,EAAC,EAhBY;AAiBnBC,EAAAA,UAAU,EAAC,EAjBQ;AAkBnBC,EAAAA,UAAU,EAAE,EAlBO;AAmBnBC,EAAAA,gBAAgB,EAAC,EAnBE;AAoBnBC,EAAAA,gBAAgB,EAAC,EApBE;AAqBnBC,EAAAA,eAAe,EAAE,KArBE;AAsBnBC,EAAAA,cAAc,EAAC,EAtBI;AAuBnBC,EAAAA,UAAU,EAAC,EAvBQ;AAwBnBC,EAAAA,cAAc,EAAC;AAxBI,CAArB;AA2BA,IAAMC,QAAQ,GAAG,qCAAjB;AACA,IAAMC,SAAS,GAAG,gCAAlB;AACA,IAAMC,UAAU,GAAG,0CAAnB;AACA,IAAMC,SAAS,GAAG,qCAAlB;AAEA,IAAMC,eAAe,GAAG,qCAAxB;AACA,IAAMC,gBAAgB,GAAG,gCAAzB;AACA,IAAMC,aAAa,GAAG,uCAAtB;AAGA,OAAO,IAAMC,KAAK,GAAGlC,WAAW,CAACE,YAAD,CAAzB;AAEP,OAAO,IAAMiC,OAAO,GAAG,SAAVA,OAAU,CAAAD,KAAK;AAAA,SAAK;AAC/BE,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,CAAR,EAAc;AACtB,iCAAUA,CAAC,CAACC,MAAF,CAASC,IAAnB,EAA0BF,CAAC,CAACC,MAAF,CAASE,KAAnC;AACD,KAH8B;AAK/BC,IAAAA,UAAU,EAAE,oBAAAL,KAAK,EAAI;AACnB,aAAO;AAAEzB,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD,KAP8B;AAS/B+B,IAAAA,iBAAiB,EAAE,2BAAAN,KAAK,EAAI;AAC1B,aAAO;AAAEd,QAAAA,eAAe,EAAE;AAAnB,OAAP;AACD,KAX8B;AAa/BqB,IAAAA,SAAS;AAAA;AAAA;AAAA,+BAAE,iBAAMP,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACHQ,gBAAAA,IADG,GACI;AACXvC,kBAAAA,gBAAgB,EAAE+B,KAAK,CAAC/B,gBADb;AAEXD,kBAAAA,gBAAgB,EAAEgC,KAAK,CAAChC;AAFb,iBADJ;AAAA;AAAA,uBAKHJ,KAAK,CACR6C,IADG,CACEnB,QADF,EACYkB,IADZ,EAEHE,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACH,IAA3C;AACAX,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACbvC,oBAAAA,QAAQ,EAAE,IADG;AAEbN,oBAAAA,gBAAgB,EAAE+B,KAAK,CAAC/B,gBAFX;AAGbD,oBAAAA,gBAAgB,EAAEgC,KAAK,CAAChC,gBAHX;AAIbF,oBAAAA,OAAO,EAAE6C,QAAQ,CAACH,IAAT,CAAcO;AAJV,mBAAf;AAMD,iBAVG,EAWHC,KAXG,CAWG,UAAAC,KAAK,EAAI;AACdL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAbG,CALG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAbsB;AAkC/BC,IAAAA,gBAAgB;AAAA;AAAA;AAAA,+BAAE,kBAAMlB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVQ,gBAAAA,IADU,GACH;AACXxB,kBAAAA,gBAAgB,EAAEgB,KAAK,CAAChB,gBADb;AAEXC,kBAAAA,gBAAgB,EAAEe,KAAK,CAACf;AAFb,iBADG;AAAA;AAAA,uBAKVrB,KAAK,CACR6C,IADG,CACEf,eADF,EACmBc,IADnB,EAEHE,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACH,IAA3C;AACAX,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACb5B,oBAAAA,eAAe,EAAE,IADJ;AAEbF,oBAAAA,gBAAgB,EAAEgB,KAAK,CAAChB,gBAFX;AAGbC,oBAAAA,gBAAgB,EAAEe,KAAK,CAACf,gBAHX;AAIbE,oBAAAA,cAAc,EAAEwB,QAAQ,CAACH,IAAT,CAAcO;AAJjB,mBAAf;AAMD,iBAVG,EAWHC,KAXG,CAWG,UAAAC,KAAK,EAAI;AACdL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAbG,CALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAlCe;AAuD/BE,IAAAA,UAAU;AAAA;AAAA;AAAA,+BAAE,kBAAMnB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACJoB,gBAAAA,MADI,GACK;AACbC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYtB,KAAK,CAAClC;AAAnC;AADI,iBADL;AAAA;AAAA,uBAIJF,KAAK,CACR2D,GADG,CACChC,SAAS,GAAGS,KAAK,CAAC/B,gBADnB,EACqCmD,MADrC,EAEHV,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAd,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACb/C,oBAAAA,aAAa,EAAE4C,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BzD,aAD7B;AAEbE,oBAAAA,gBAAgB,EAAE0C,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BvD,gBAFhC;AAGbC,oBAAAA,mBAAmB,EAAEyC,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BtD,mBAHnC;AAIbC,oBAAAA,cAAc,EAAEwC,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BrD,cAJ9B;AAKbC,oBAAAA,kBAAkB,EAAEuC,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BpD,kBALlC;AAMbC,oBAAAA,iBAAiB,EAAEsC,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BnD,iBANjC;AAObC,oBAAAA,cAAc,EAAEqC,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BlD,cAP9B;AAQbS,oBAAAA,UAAU,EAAE4B,QAAQ,CAACH,IAAT,CAAcgB,YAAd,CAA2BzC;AAR1B,mBAAf;AAUD,iBAdG,EAeHiC,KAfG,CAeG,UAASC,KAAT,EAAgB;AACrBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAjBG,CAJI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAvDqB;AA+E/BQ,IAAAA,iBAAiB;AAAA;AAAA;AAAA,+BAAE,kBAAMzB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXoB,gBAAAA,MADW,GACF;AACbC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYtB,KAAK,CAACb;AAAnC;AADI,iBADE;AAAA;AAAA,uBAIXvB,KAAK,CACR2D,GADG,CACC5B,gBAAgB,GAAGK,KAAK,CAAChB,gBAD1B,EAC4CoC,MAD5C,EAEHV,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAd,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACbY,oBAAAA,aAAa,EAAEf,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BD,aAD7B;AAEb1C,oBAAAA,gBAAgB,EAAE2B,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2B3C,gBAFhC;AAGb4C,oBAAAA,mBAAmB,EAAEjB,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BC,mBAHnC;AAIbC,oBAAAA,cAAc,EAAElB,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BE,cAJ9B;AAKbC,oBAAAA,kBAAkB,EAAEnB,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BG,kBALlC;AAMb1C,oBAAAA,UAAU,EAAEuB,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BvC,UAN1B;AAObC,oBAAAA,cAAc,EAAEsB,QAAQ,CAACH,IAAT,CAAcmB,YAAd,CAA2BtC;AAP9B,mBAAf;AASD,iBAbG,EAcH2B,KAdG,CAcG,UAASC,KAAT,EAAgB;AACrBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAhBG,CAJW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA/Ec;AAsG/Bc,IAAAA,UAAU;AAAA;AAAA;AAAA,+BAAE,kBAAM/B,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACJoB,gBAAAA,MADI,GACK;AAEbC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYtB,KAAK,CAAClC;AAAnC;AAFI,iBADL;AAAA;AAAA,uBAKJF,KAAK,CACR2D,GADG,CACC/B,UAAU,GAAGQ,KAAK,CAAC/B,gBAAnB,GAAsC,QADvC,EACiDmD,MADjD,EAEHV,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBAAIqB,cAAc,GAAGrB,QAAQ,CAACH,IAAT,CAAcyB,SAAnC;AACApC,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACftC,oBAAAA,aAAa,EAAEwD;AADA,mBAAf;AAGD,iBARG,EASHhB,KATG,CASG,UAASC,KAAT,EAAgB;AACrBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAXG,CALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAtGqB;AAyH/BiB,IAAAA,iBAAiB;AAAA;AAAA;AAAA,+BAAE,kBAAMlC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXoB,gBAAAA,MADW,GACF;AAEbC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYtB,KAAK,CAACb;AAAnC;AAFI,iBADE;AAAA;AAAA,uBAKXvB,KAAK,CACR2D,GADG,CACC5B,gBAAgB,GAAGK,KAAK,CAACZ,UAAzB,GAAsC,QADvC,EACiDgC,MADjD,EAEHV,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBAAIqB,cAAc,GAAGrB,QAAQ,CAACH,IAAT,CAAcyB,SAAnC;AACApC,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACfrC,oBAAAA,iBAAiB,EAAEuD;AADJ,mBAAf;AAGD,iBARG,EASHhB,KATG,CASG,UAASC,KAAT,EAAgB;AACrBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAXG,CALW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAzHc;AA4I/BkB,IAAAA,UAAU;AAAA;AAAA;AAAA,+BAAE,kBAAMnC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACJoB,gBAAAA,MADI,GACK;AAEbC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYtB,KAAK,CAAClC;AAAnC;AAFI,iBADL;AAAA;AAAA,uBAKJF,KAAK,CACR2D,GADG,CACC9B,SAAS,GAAGO,KAAK,CAAC/B,gBADnB,EACqCmD,MADrC,EAEHV,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBAAIyB,OAAO,GAAGzB,QAAQ,CAACH,IAAvB;AACAX,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AACfpC,oBAAAA,QAAQ,EAAE0D,OAAO,CAACC,IADH;AAEfzD,oBAAAA,YAAY,EAAEwD,OAAO,CAACE,UAFP;AAGf3D,oBAAAA,YAAY,EAAGyD,OAAO,CAACG;AAHR,mBAAf;AAKD,iBAVG,EAWHvB,KAXG,CAWG,UAASC,KAAT,EAAgB;AACrBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBAbG,CALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5IqB,GAAL;AAAA,CAArB","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  pembeli_avatar: \"\",\n  is_login: false,\n  listTransaksi: [],\n  listProdukPenjual: [],\n  listCart:[],\n  cartTotalQty:\"\",\n  cartTotalByr:\"\",\n  jumlah:\"\",\n  pembayaran:\"\",\n  pembeli_id: \"\",\n  penjual_username:\"\",\n  penjual_password:\"\", \n  is_loginPenjual: false,\n  api_keyPenjual:\"\",\n  penjual_id:\"\",\n  penjual_avatar:\"\"\n};\n\nconst myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nconst myDataUrl = \"http://127.0.0.1:5000/pembeli/\";\nconst myTransUrl = \"http://127.0.0.1:5000/pembeli/transaksi/\";\nconst myCartUrl = \"http://127.0.0.1:5000/pembeli/cart/\";\n\nconst myReqUrlPenjual = \"http://127.0.0.1:5000/penjual/login\";\nconst myDataUrlPenjual = \"http://127.0.0.1:5000/penjual/\";\nconst myCrudPenjual = \"http://127.0.0.1:5000/penjual/produk/\";\n\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n  setField: (state, e) => {\n    return { [e.target.name]: e.target.value };\n  },\n\n  postLogout: state => {\n    return { is_login: false };\n  },\n\n  postLogoutPenjual: state => {\n    return { is_loginPenjual: false };\n  },\n\n  postLogin: async state => {\n    const data = {\n      pembeli_username: state.pembeli_username,\n      pembeli_password: state.pembeli_password\n    };\n    await axios\n      .post(myReqUrl, data)\n      .then(response => {\n        console.log(\"postLogin response\", response.data);\n        store.setState({\n          is_login: true,\n          pembeli_username: state.pembeli_username,\n          pembeli_password: state.pembeli_password,\n          api_key: response.data.Token\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n\n  postLoginPenjual: async state => {\n    const data = {\n      penjual_username: state.penjual_username,\n      penjual_password: state.penjual_password\n    };\n    await axios\n      .post(myReqUrlPenjual, data)\n      .then(response => {\n        console.log(\"postLogin response\", response.data);\n        store.setState({\n          is_loginPenjual: true,\n          penjual_username: state.penjual_username,\n          penjual_password: state.penjual_password,\n          api_keyPenjual: response.data.Token\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n\n  postLogin2: async state => {\n    const config = {\n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myDataUrl + state.pembeli_username, config)\n      .then(response => {\n        console.log(response);\n        store.setState({\n          pembeli_email: response.data.Data_Pembeli.pembeli_email,\n          pembeli_username: response.data.Data_Pembeli.pembeli_username,\n          pembeli_namaLengkap: response.data.Data_Pembeli.pembeli_namaLengkap,\n          pembeli_gender: response.data.Data_Pembeli.pembeli_gender,\n          pembeli_lokasiKota: response.data.Data_Pembeli.pembeli_lokasiKota,\n          pembeli_pekerjaan: response.data.Data_Pembeli.pembeli_pekerjaan,\n          pembeli_avatar: response.data.Data_Pembeli.pembeli_avatar,\n          pembeli_id: response.data.Data_Pembeli.pembeli_id,\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postLogin2Penjual: async state => {\n    const config = {\n      headers: { Authorization: \"Bearer \" + state.api_keyPenjual }\n    };\n    await axios\n      .get(myDataUrlPenjual + state.penjual_username, config)\n      .then(response => {\n        console.log(response);\n        store.setState({\n          penjual_email: response.data.Data_Penjual.penjual_email,\n          penjual_username: response.data.Data_Penjual.penjual_username,\n          penjual_namaLengkap: response.data.Data_Penjual.penjual_namaLengkap,\n          penjual_gender: response.data.Data_Penjual.penjual_gender,\n          penjual_lokasiKota: response.data.Data_Penjual.penjual_lokasiKota,\n          penjual_id: response.data.Data_Penjual.penjual_id,\n          penjual_avatar: response.data.Data_Penjual.penjual_avatar,\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postLogin3: async state => {\n    const config = {\n      \n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myTransUrl + state.pembeli_username + \"?rp=40\", config)\n      .then(response => {\n        console.log(response);\n        var allTransaction = response.data.Transaksi\n        store.setState({\n        listTransaksi: allTransaction\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postLogin3Penjual: async state => {\n    const config = {\n      \n      headers: { Authorization: \"Bearer \" + state.api_keyPenjual }\n    };\n    await axios\n      .get(myDataUrlPenjual + state.penjual_id + \"?rp=40\", config)\n      .then(response => {\n        console.log(response);\n        var allTransaction = response.data.Transaksi\n        store.setState({\n        listProdukPenjual: allTransaction\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postLogin4: async state => {\n    const config = {\n      \n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myCartUrl + state.pembeli_username, config)\n      .then(response => {\n        console.log(response);\n        var allCart = response.data\n        store.setState({\n        listCart: allCart.Cart,\n        cartTotalByr: allCart.totalBayar,\n        cartTotalQty : allCart.totalProduk\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}