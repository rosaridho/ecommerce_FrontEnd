{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nvar initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  is_login: false\n};\nvar myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nvar myDataUrl = \"http://127.0.0.1:5000/pembeli/medi\";\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, e) {\n      return _defineProperty({}, e.target.name, e.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data, config;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  pembeli_username: state.pembeli_username,\n                  pembeli_password: state.pembeli_password\n                }; // await axios\n                //   .post(myReqUrl, data)\n                //   .then(response => {\n                //     console.log(\"postLogin response\", response.data);\n                //     store.setState({\n                //       is_login: true,\n                //       api_key: response.data.Token\n                //     });\n                //   })\n                //   .catch(error => {\n                //     console.log(error);\n                //   });\n\n                config = {\n                  headers: {\n                    Authorization: \"bearer \" + _this.api_key\n                  }\n                };\n                _context.next = 4;\n                return axios.get(myDataUrl, data, config).then(function (response) {\n                  console.log(response.data);\n                  store.setState({\n                    pembeli_email: response.data.pembeli_email,\n                    pembeli_username: response.data.pembeli_username,\n                    pembeli_namaLengkap: response.data.pembeli_namaLengkap,\n                    pembeli_gender: response.data.pembeli_gender,\n                    pembeli_lokasiKota: response.data.pembeli_lokasiKota,\n                    pembeli_pekerjaan: response.data.pembeli_pekerjaan\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }() //   showData: async state => {\n    //     alert(\"myDataUrl\")\n    //     await axios\n    //       .get(myDataUrl)\n    //       .then(response => {\n    //         console.log(response.data);\n    //         store.setState({\n    //             pembeli_email: response.data.pembeli_email,\n    //             pembeli_username: response.data.pembeli_username,\n    //             pembeli_namaLengkap: response.data.pembeli_namaLengkap,\n    //             pembeli_gender: response.data.pembeli_gender,\n    //             pembeli_lokasiKota: response.data.pembeli_lokasiKota,\n    //             pembeli_pekerjaan: response.data.pembeli_pekerjaan\n    //         });\n    //       })\n    //       .catch(function(error) {\n    //         console.log(error);\n    //       });\n    //   }\n\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/src/store.js"],"names":["createStore","axios","initialState","api_key","pembeli_email","pembeli_password","pembeli_username","pembeli_namaLengkap","pembeli_gender","pembeli_lokasiKota","pembeli_pekerjaan","is_login","myReqUrl","myDataUrl","store","actions","setField","state","e","target","name","value","postLogout","postLogin","data","config","headers","Authorization","get","then","response","console","log","setState","catch","error"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,gBAAgB,EAAE,EAJC;AAKnBC,EAAAA,mBAAmB,EAAE,EALF;AAMnBC,EAAAA,cAAc,EAAE,EANG;AAOnBC,EAAAA,kBAAkB,EAAE,EAPD;AAQnBC,EAAAA,iBAAiB,EAAE,EARA;AASnBC,EAAAA,QAAQ,EAAE;AATS,CAArB;AAYA,IAAMC,QAAQ,GAAG,qCAAjB;AACA,IAAMC,SAAS,GAAG,oCAAlB;AAEA,OAAO,IAAMC,KAAK,GAAGd,WAAW,CAACE,YAAD,CAAzB;AAEP,OAAO,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAAAD,KAAK;AAAA,SAAK;AAC/BE,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,CAAR,EAAc;AACtB,iCAAUA,CAAC,CAACC,MAAF,CAASC,IAAnB,EAA0BF,CAAC,CAACC,MAAF,CAASE,KAAnC;AACD,KAH8B;AAI/BC,IAAAA,UAAU,EAAE,oBAAAL,KAAK,EAAI;AACnB,aAAO;AAAEN,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD,KAN8B;AAO/BY,IAAAA,SAAS;AAAA;AAAA;AAAA,+BAAE,iBAAMN,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACHO,gBAAAA,IADG,GACI;AACXlB,kBAAAA,gBAAgB,EAAEW,KAAK,CAACX,gBADb;AAEXD,kBAAAA,gBAAgB,EAAEY,KAAK,CAACZ;AAFb,iBADJ,EAMT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEIoB,gBAAAA,MAnBK,GAmBI;AACTC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAY,KAAI,CAACxB;AAAlC;AADA,iBAnBJ;AAAA;AAAA,uBAuBHF,KAAK,CACR2B,GADG,CACCf,SADD,EACWW,IADX,EACgBC,MADhB,EAEHI,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACN,IAArB;AACAV,kBAAAA,KAAK,CAACmB,QAAN,CAAe;AACb7B,oBAAAA,aAAa,EAAE0B,QAAQ,CAACN,IAAT,CAAcpB,aADhB;AAEbE,oBAAAA,gBAAgB,EAAEwB,QAAQ,CAACN,IAAT,CAAclB,gBAFnB;AAGbC,oBAAAA,mBAAmB,EAAEuB,QAAQ,CAACN,IAAT,CAAcjB,mBAHtB;AAIbC,oBAAAA,cAAc,EAAEsB,QAAQ,CAACN,IAAT,CAAchB,cAJjB;AAKbC,oBAAAA,kBAAkB,EAAEqB,QAAQ,CAACN,IAAT,CAAcf,kBALrB;AAMbC,oBAAAA,iBAAiB,EAAEoB,QAAQ,CAACN,IAAT,CAAcd;AANpB,mBAAf;AAQD,iBAZG,EAaHwB,KAbG,CAaG,UAASC,KAAT,EAAgB;AACrBJ,kBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,iBAfG,CAvBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAPsB,CA0D/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5E+B,GAAL;AAAA,CAArB","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  is_login: false\n};\n\nconst myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nconst myDataUrl = \"http://127.0.0.1:5000/pembeli/medi\";\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n  setField: (state, e) => {\n    return { [e.target.name]: e.target.value };\n  },\n  postLogout: state => {\n    return { is_login: false };\n  },\n  postLogin: async state => {\n    const data = {\n      pembeli_username: state.pembeli_username,\n      pembeli_password: state.pembeli_password\n    };\n\n    // await axios\n    //   .post(myReqUrl, data)\n    //   .then(response => {\n    //     console.log(\"postLogin response\", response.data);\n    //     store.setState({\n    //       is_login: true,\n    //       api_key: response.data.Token\n    //     });\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n\n    var config = {\n        headers: { Authorization: \"bearer \" + this.api_key }\n    }\n\n    await axios\n      .get(myDataUrl,data,config)\n      .then(response => {\n        console.log(response.data);\n        store.setState({\n          pembeli_email: response.data.pembeli_email,\n          pembeli_username: response.data.pembeli_username,\n          pembeli_namaLengkap: response.data.pembeli_namaLengkap,\n          pembeli_gender: response.data.pembeli_gender,\n          pembeli_lokasiKota: response.data.pembeli_lokasiKota,\n          pembeli_pekerjaan: response.data.pembeli_pekerjaan\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n   \n\n    // var bodyParameters = {\n    //   key: \"value\"\n    // };\n    // alert(data)\n    // alert(config)\n\n    \n  }\n\n  //   showData: async state => {\n  //     alert(\"myDataUrl\")\n  //     await axios\n  //       .get(myDataUrl)\n  //       .then(response => {\n  //         console.log(response.data);\n  //         store.setState({\n  //             pembeli_email: response.data.pembeli_email,\n  //             pembeli_username: response.data.pembeli_username,\n  //             pembeli_namaLengkap: response.data.pembeli_namaLengkap,\n  //             pembeli_gender: response.data.pembeli_gender,\n  //             pembeli_lokasiKota: response.data.pembeli_lokasiKota,\n  //             pembeli_pekerjaan: response.data.pembeli_pekerjaan\n  //         });\n  //       })\n  //       .catch(function(error) {\n  //         console.log(error);\n  //       });\n  //   }\n});\n"]},"metadata":{},"sourceType":"module"}