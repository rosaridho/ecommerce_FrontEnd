{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nvar initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  pembeli_avatar: \"\",\n  is_login: false,\n  listTransaksi: [],\n  listCart: [],\n  cartTotalQty: \"\",\n  cartTotalByr: \"\",\n  jumlah: \"\",\n  pembayaran: \"\",\n  pembeli_id: \"\"\n};\nvar myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nvar myDataUrl = \"http://127.0.0.1:5000/pembeli/\";\nvar myTransUrl = \"http://127.0.0.1:5000/pembeli/transaksi/\";\nvar myCartUrl = \"http://127.0.0.1:5000/pembeli/cart/\";\nvar myReqUrlPenjual = \"http://127.0.0.1:5000/penjual/login\";\nvar myDataUrlPenjual = \"http://127.0.0.1:5000/penjual/\";\nvar myCrudPenjual = \"http://127.0.0.1:5000/penjual/produk/\";\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, e) {\n      return _defineProperty({}, e.target.name, e.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  pembeli_username: state.pembeli_username,\n                  pembeli_password: state.pembeli_password\n                };\n                _context.next = 3;\n                return axios.post(myReqUrl, data).then(function (response) {\n                  console.log(\"postLogin response\", response.data);\n                  store.setState({\n                    is_login: true,\n                    pembeli_username: state.pembeli_username,\n                    pembeli_password: state.pembeli_password,\n                    api_key: response.data.Token\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    postLogin2: function () {\n      var _postLogin2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context2.next = 3;\n                return axios.get(myDataUrl + state.pembeli_username, config).then(function (response) {\n                  console.log(response);\n                  store.setState({\n                    pembeli_email: response.data.Data_Pembeli.pembeli_email,\n                    pembeli_username: response.data.Data_Pembeli.pembeli_username,\n                    pembeli_namaLengkap: response.data.Data_Pembeli.pembeli_namaLengkap,\n                    pembeli_gender: response.data.Data_Pembeli.pembeli_gender,\n                    pembeli_lokasiKota: response.data.Data_Pembeli.pembeli_lokasiKota,\n                    pembeli_pekerjaan: response.data.Data_Pembeli.pembeli_pekerjaan,\n                    pembeli_avatar: response.data.Data_Pembeli.pembeli_avatar,\n                    pembeli_id: response.data.Data_Pembeli.pembeli_id\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postLogin2(_x2) {\n        return _postLogin2.apply(this, arguments);\n      }\n\n      return postLogin2;\n    }(),\n    postLogin3: function () {\n      var _postLogin3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context3.next = 3;\n                return axios.get(myTransUrl + state.pembeli_username + \"?rp=40\", config).then(function (response) {\n                  console.log(response);\n                  var allTransaction = response.data.Transaksi;\n                  store.setState({\n                    listTransaksi: allTransaction\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function postLogin3(_x3) {\n        return _postLogin3.apply(this, arguments);\n      }\n\n      return postLogin3;\n    }(),\n    postLogin4: function () {\n      var _postLogin4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \" + state.api_key\n                  }\n                };\n                _context4.next = 3;\n                return axios.get(myCartUrl + state.pembeli_username, config).then(function (response) {\n                  console.log(response);\n                  var allCart = response.data;\n                  store.setState({\n                    listCart: allCart.Cart,\n                    cartTotalByr: allCart.totalBayar,\n                    cartTotalQty: allCart.totalProduk\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function postLogin4(_x4) {\n        return _postLogin4.apply(this, arguments);\n      }\n\n      return postLogin4;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/src/store.js"],"names":["createStore","axios","initialState","api_key","pembeli_email","pembeli_password","pembeli_username","pembeli_namaLengkap","pembeli_gender","pembeli_lokasiKota","pembeli_pekerjaan","pembeli_avatar","is_login","listTransaksi","listCart","cartTotalQty","cartTotalByr","jumlah","pembayaran","pembeli_id","myReqUrl","myDataUrl","myTransUrl","myCartUrl","myReqUrlPenjual","myDataUrlPenjual","myCrudPenjual","store","actions","setField","state","e","target","name","value","postLogout","postLogin","data","post","then","response","console","log","setState","Token","catch","error","postLogin2","config","headers","Authorization","get","Data_Pembeli","postLogin3","allTransaction","Transaksi","postLogin4","allCart","Cart","totalBayar","totalProduk"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n  api_key: \"\",\n  pembeli_email: \"\",\n  pembeli_password: \"\",\n  pembeli_username: \"\",\n  pembeli_namaLengkap: \"\",\n  pembeli_gender: \"\",\n  pembeli_lokasiKota: \"\",\n  pembeli_pekerjaan: \"\",\n  pembeli_avatar: \"\",\n  is_login: false,\n  listTransaksi: [],\n  listCart:[],\n  cartTotalQty:\"\",\n  cartTotalByr:\"\",\n  jumlah:\"\",\n  pembayaran:\"\",\n  pembeli_id: \"\"\n};\n\nconst myReqUrl = \"http://127.0.0.1:5000/pembeli/login\";\nconst myDataUrl = \"http://127.0.0.1:5000/pembeli/\";\nconst myTransUrl = \"http://127.0.0.1:5000/pembeli/transaksi/\";\nconst myCartUrl = \"http://127.0.0.1:5000/pembeli/cart/\";\n\nconst myReqUrlPenjual = \"http://127.0.0.1:5000/penjual/login\";\nconst myDataUrlPenjual = \"http://127.0.0.1:5000/penjual/\";\nconst myCrudPenjual = \"http://127.0.0.1:5000/penjual/produk/\";\n\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n  setField: (state, e) => {\n    return { [e.target.name]: e.target.value };\n  },\n  postLogout: state => {\n    return { is_login: false };\n  },\n  postLogin: async state => {\n    const data = {\n      pembeli_username: state.pembeli_username,\n      pembeli_password: state.pembeli_password\n    };\n\n    await axios\n      .post(myReqUrl, data)\n      .then(response => {\n        console.log(\"postLogin response\", response.data);\n        store.setState({\n          is_login: true,\n          pembeli_username: state.pembeli_username,\n          pembeli_password: state.pembeli_password,\n          api_key: response.data.Token\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n  postLogin2: async state => {\n    const config = {\n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myDataUrl + state.pembeli_username, config)\n      .then(response => {\n        console.log(response);\n        store.setState({\n          pembeli_email: response.data.Data_Pembeli.pembeli_email,\n          pembeli_username: response.data.Data_Pembeli.pembeli_username,\n          pembeli_namaLengkap: response.data.Data_Pembeli.pembeli_namaLengkap,\n          pembeli_gender: response.data.Data_Pembeli.pembeli_gender,\n          pembeli_lokasiKota: response.data.Data_Pembeli.pembeli_lokasiKota,\n          pembeli_pekerjaan: response.data.Data_Pembeli.pembeli_pekerjaan,\n          pembeli_avatar: response.data.Data_Pembeli.pembeli_avatar,\n          pembeli_id: response.data.Data_Pembeli.pembeli_id,\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n  postLogin3: async state => {\n    const config = {\n      \n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myTransUrl + state.pembeli_username + \"?rp=40\", config)\n      .then(response => {\n        console.log(response);\n        var allTransaction = response.data.Transaksi\n        store.setState({\n        listTransaksi: allTransaction\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n  postLogin4: async state => {\n    const config = {\n      \n      headers: { Authorization: \"Bearer \" + state.api_key }\n    };\n    await axios\n      .get(myCartUrl + state.pembeli_username, config)\n      .then(response => {\n        console.log(response);\n        var allCart = response.data\n        store.setState({\n        listCart: allCart.Cart,\n        cartTotalByr: allCart.totalBayar,\n        cartTotalQty : allCart.totalProduk\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}