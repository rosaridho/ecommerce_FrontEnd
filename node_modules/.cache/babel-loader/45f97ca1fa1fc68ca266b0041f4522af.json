{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from 'unistore';\nimport axios from 'axios';\nvar initialState = {\n  api_key: '',\n  email: '',\n  password: '',\n  full_name: '',\n  username: '',\n  is_login: false,\n  listNews: []\n};\nvar baseUrl = \"https://newsapi.org/v2\";\nvar searchCategory = \"/top-headlines\";\nvar searchSource = \"bbc-news\";\nvar keyAPI = \"31a74b58e4bb4e1bb1d7bb0542dd1d81\";\nvar myReqUrl = baseUrl + searchCategory + \"?sources=\" + searchSource + \"&apiKey=\" + keyAPI;\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, e) {\n      return _defineProperty({}, e.target.name, e.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context.next = 3;\n                return axios.post(\"https://ridhorosaATA.free.beeceptor.com/signin\", data).then(function (response) {\n                  console.log(\"postLogin response\", response.data);\n\n                  if (response.data.hasOwnProperty('api_key')) {\n                    store.setState({\n                      is_login: true,\n                      api_key: response.data.api_key,\n                      full_name: response.data.full_name,\n                      email: response.data.email\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    showHeadLine: function () {\n      var _showHeadLine = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {};\n                _context2.next = 3;\n                return axios.get(myReqUrl).then(function (response) {\n                  console.log(response.data);\n                  store.setState({\n                    listNews: response.data.articles\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function showHeadLine(_x2) {\n        return _showHeadLine.apply(this, arguments);\n      }\n\n      return showHeadLine;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/Desktop/ecommerce_Portofolio_v2/Main_Folder/react/react_ecommerce/src/store.js"],"names":["createStore","axios","initialState","api_key","email","password","full_name","username","is_login","listNews","baseUrl","searchCategory","searchSource","keyAPI","myReqUrl","store","actions","setField","state","e","target","name","value","postLogout","postLogin","data","post","then","response","console","log","hasOwnProperty","setState","catch","error","showHeadLine","get","articles"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,EADS;AAEjBC,EAAAA,KAAK,EAAC,EAFW;AAGjBC,EAAAA,QAAQ,EAAC,EAHQ;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,QAAQ,EAAC,EALQ;AAMjBC,EAAAA,QAAQ,EAAG,KANM;AAOjBC,EAAAA,QAAQ,EAAG;AAPM,CAArB;AAUA,IAAMC,OAAO,GAAG,wBAAhB;AACA,IAAMC,cAAc,GAAG,gBAAvB;AACA,IAAMC,YAAY,GAAI,UAAtB;AACA,IAAMC,MAAM,GAAG,kCAAf;AACA,IAAMC,QAAQ,GAAGJ,OAAO,GAAGC,cAAV,GAA2B,WAA3B,GAAwCC,YAAxC,GAAuD,UAAvD,GAAoEC,MAArF;AAIA,OAAO,IAAME,KAAK,GAAGf,WAAW,CAACE,YAAD,CAAzB;AAEP,OAAO,IAAMc,OAAO,GAAG,SAAVA,OAAU,CAAAD,KAAK;AAAA,SAAK;AAC7BE,IAAAA,QAAQ,EAAC,kBAACC,KAAD,EAAOC,CAAP,EAAa;AAClB,iCAASA,CAAC,CAACC,MAAF,CAASC,IAAlB,EAA0BF,CAAC,CAACC,MAAF,CAASE,KAAnC;AACH,KAH4B;AAI7BC,IAAAA,UAAU,EAAE,oBAAAL,KAAK,EAAG;AAChB,aAAO;AAACV,QAAAA,QAAQ,EAAG;AAAZ,OAAP;AACH,KAN4B;AAO7BgB,IAAAA,SAAS;AAAA;AAAA;AAAA,+BAAG,iBAAMN,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFO,gBAAAA,IAFE,GAEK;AAAClB,kBAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAjB;AAA2BF,kBAAAA,QAAQ,EAAEa,KAAK,CAACb;AAA3C,iBAFL;AAAA;AAAA,uBAGFJ,KAAK,CACVyB,IADK,CACA,gDADA,EACkDD,IADlD,EAELE,IAFK,CAEA,UAAAC,QAAQ,EAAI;AACdC,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACH,IAA3C;;AACA,sBAAGG,QAAQ,CAACH,IAAT,CAAcM,cAAd,CAA6B,SAA7B,CAAH,EAA2C;AACvChB,oBAAAA,KAAK,CAACiB,QAAN,CAAe;AACXxB,sBAAAA,QAAQ,EAAG,IADA;AAEXL,sBAAAA,OAAO,EAAGyB,QAAQ,CAACH,IAAT,CAActB,OAFb;AAGXG,sBAAAA,SAAS,EAAGsB,QAAQ,CAACH,IAAT,CAAcnB,SAHf;AAIXF,sBAAAA,KAAK,EAAGwB,QAAQ,CAACH,IAAT,CAAcrB;AAJX,qBAAf;AAMH;AACJ,iBAZK,EAaL6B,KAbK,CAaC,UAAAC,KAAK,EAAI;AACZL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,iBAfK,CAHE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAPoB;AA2B7BC,IAAAA,YAAY;AAAA;AAAA;AAAA,+BAAG,kBAAMjB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTO,gBAAAA,IADS,GACF,EADE;AAAA;AAAA,uBAETxB,KAAK,CACVmC,GADK,CACDtB,QADC,EAELa,IAFK,CAEA,UAAAC,QAAQ,EAAI;AAClBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACEV,kBAAAA,KAAK,CAACiB,QAAN,CAAe;AAACvB,oBAAAA,QAAQ,EAAEmB,QAAQ,CAACH,IAAT,CAAcY;AAAzB,mBAAf;AAED,iBANK,EAOLJ,KAPK,CAOC,UAASC,KAAT,EAAe;AACpBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,iBATK,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3BiB,GAAL;AAAA,CAArB","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\nconst initialState = {\n    api_key:'',\n    email:'',\n    password:'',\n    full_name:'',\n    username:'',\n    is_login : false,\n    listNews : []\n}\n\nconst baseUrl = \"https://newsapi.org/v2\";\nconst searchCategory = \"/top-headlines\";\nconst searchSource  = \"bbc-news\";\nconst keyAPI = \"31a74b58e4bb4e1bb1d7bb0542dd1d81\";\nconst myReqUrl = baseUrl + searchCategory + \"?sources=\"+ searchSource + \"&apiKey=\" + keyAPI\n\n\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    setField:(state,e) => {\n        return {[e.target.name] : e.target.value};\n    },\n    postLogout: state =>{\n        return {is_login : false};\n    },\n    postLogin : async state => {\n        \n        const data = {username: state.username, password: state.password};\n        await axios\n        .post(\"https://ridhorosaATA.free.beeceptor.com/signin\", data)\n        .then(response => {\n            console.log(\"postLogin response\", response.data);\n            if(response.data.hasOwnProperty('api_key')){\n                store.setState({\n                    is_login : true,\n                    api_key : response.data.api_key,\n                    full_name : response.data.full_name,\n                    email : response.data.email\n                });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    },\n    showHeadLine : async state => {\n    const data = {}\n    await axios\n    .get(myReqUrl)\n    .then(response => {\n    console.log(response.data)\n      store.setState({listNews: response.data.articles});\n      \n    })\n    .catch(function(error){\n      console.log(error)\n    })\n    }\n});"]},"metadata":{},"sourceType":"module"}